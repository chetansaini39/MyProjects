/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package eightpuzzle.UI;

import com.sun.java.swing.plaf.motif.MotifLookAndFeel;
import com.sun.java.swing.plaf.windows.WindowsLookAndFeel;

import eightpuzzlev.algo.A_Star_H_One;
import eightpuzzlev.algo.A_Star_H_Two;
import eightpuzzlev.algo.BFS_2;
import eightpuzzlev.algo.DFS_2;
import eightpuzzlev.algo.Greedy_BFS_H_One_NumOfTiles;
import eightpuzzlev.algo.Greedy_BFS_H_Two_Manhatten;
import eightpuzzlev.algo.HelperMethods;
import java.io.PrintStream;
import javax.swing.JOptionPane;
import javax.swing.LookAndFeel;
import javax.swing.plaf.metal.MetalLookAndFeel;
import javax.swing.plaf.nimbus.NimbusLookAndFeel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Chetan
 */
public class EightPuzzleFrame extends javax.swing.JFrame {
//    1. Breadth First Search
//    2. Depth First Search
//    3. Iterative Deepening Search
//    4. Greedy Best First Search Heuristic One - Tile out of place
//    5. Greedy Best First Search Heuristic Two - Manhatten Distance
//    6. A* Search Heuristic One - Tile out of place
//    7. A* Search Heuristic Two - Manhatten Distance

    int[] problemEasy = {1, 3, 4, 8, 6, 2, 7, 0, 5};
    int[] problemMedium = {2, 8, 1, 0, 4, 3, 7, 6, 5};
    int[] problemHard = {5, 6, 7, 4, 0, 8, 3, 2, 1};
    int[] goalSet = {1, 2, 3, 8, 0, 4, 7, 6, 5};
    int problem[];
    int space;
    String text;
    HelperMethods helper = new HelperMethods();
    drawing d;
    String solution;
    String time;
    DefaultTableModel tableodel;

    /**
     * Creates new form EightPuzzleFrame
     */
    public EightPuzzleFrame() {
        initComponents();
        tableodel = (DefaultTableModel) jTable1.getModel();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup_algorithms = new javax.swing.ButtonGroup();
        buttonGroup_heuristic = new javax.swing.ButtonGroup();
        buttonGroup_puzzle = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jRadioButton_bfs = new javax.swing.JRadioButton();
        jRadioButton_dfs = new javax.swing.JRadioButton();
        jRadioButton_iterativeDS = new javax.swing.JRadioButton();
        jRadioButton_greedyBFS = new javax.swing.JRadioButton();
        jRadioButton_aStar = new javax.swing.JRadioButton();
        panel_Heuristic = new javax.swing.JPanel();
        jRadioButton_HeuristicOne = new javax.swing.JRadioButton();
        jRadioButton_HeuristicTwo = new javax.swing.JRadioButton();
        jButton_runAlgo = new javax.swing.JButton();
        jButton_solution = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jRadioButton_easyProblem = new javax.swing.JRadioButton();
        jRadioButton_problemMedium = new javax.swing.JRadioButton();
        jRadioButton_problemHard = new javax.swing.JRadioButton();
        jRadioButton_problemCustom = new javax.swing.JRadioButton();
        jTextField_customPuzzle = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea = new javax.swing.JTextArea();
        jPanel_drawing = jPanel_drawing=new drawing();
        jButton1 = new javax.swing.JButton();
        jProgressBar1 = new javax.swing.JProgressBar();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem_exit = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setForeground(java.awt.Color.red);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Algorithm", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 14))); // NOI18N

        buttonGroup_algorithms.add(jRadioButton_bfs);
        jRadioButton_bfs.setText("Breadth First Search");
        jRadioButton_bfs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton_bfsActionPerformed(evt);
            }
        });

        buttonGroup_algorithms.add(jRadioButton_dfs);
        jRadioButton_dfs.setText("Depth First Search");
        jRadioButton_dfs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton_dfsActionPerformed(evt);
            }
        });

        buttonGroup_algorithms.add(jRadioButton_iterativeDS);
        jRadioButton_iterativeDS.setText("Iterative Deepening Search");
        jRadioButton_iterativeDS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton_iterativeDSActionPerformed(evt);
            }
        });

        buttonGroup_algorithms.add(jRadioButton_greedyBFS);
        jRadioButton_greedyBFS.setText("Greedy Best First Search");
        jRadioButton_greedyBFS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton_greedyBFSActionPerformed(evt);
            }
        });

        buttonGroup_algorithms.add(jRadioButton_aStar);
        jRadioButton_aStar.setText("A*");
        jRadioButton_aStar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton_aStarActionPerformed(evt);
            }
        });

        panel_Heuristic.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Heuristic", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(255, 102, 0))); // NOI18N

        buttonGroup_heuristic.add(jRadioButton_HeuristicOne);
        jRadioButton_HeuristicOne.setText("Number Of Tiles Misplaced");
        jRadioButton_HeuristicOne.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton_HeuristicOneActionPerformed(evt);
            }
        });

        buttonGroup_heuristic.add(jRadioButton_HeuristicTwo);
        jRadioButton_HeuristicTwo.setText("Manhatten Distance");
        jRadioButton_HeuristicTwo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton_HeuristicTwoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panel_HeuristicLayout = new javax.swing.GroupLayout(panel_Heuristic);
        panel_Heuristic.setLayout(panel_HeuristicLayout);
        panel_HeuristicLayout.setHorizontalGroup(
            panel_HeuristicLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_HeuristicLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panel_HeuristicLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jRadioButton_HeuristicOne)
                    .addComponent(jRadioButton_HeuristicTwo))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panel_HeuristicLayout.setVerticalGroup(
            panel_HeuristicLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_HeuristicLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jRadioButton_HeuristicOne)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jRadioButton_HeuristicTwo)
                .addContainerGap(15, Short.MAX_VALUE))
        );

        jButton_runAlgo.setText("Run Algorithm");
        jButton_runAlgo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_runAlgoActionPerformed(evt);
            }
        });

        jButton_solution.setText("Play Solution Steps");
        jButton_solution.setEnabled(false);
        jButton_solution.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_solutionActionPerformed(evt);
            }
        });

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Puzzle"));

        buttonGroup_puzzle.add(jRadioButton_easyProblem);
        jRadioButton_easyProblem.setText("Easy Problem [1,3,4,8,6,2,7,0,5]");
        jRadioButton_easyProblem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton_easyProblemActionPerformed(evt);
            }
        });

        buttonGroup_puzzle.add(jRadioButton_problemMedium);
        jRadioButton_problemMedium.setText("Medium Prblem [2,8,1,0,4,3,7,6,5] ");
        jRadioButton_problemMedium.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton_problemMediumActionPerformed(evt);
            }
        });

        buttonGroup_puzzle.add(jRadioButton_problemHard);
        jRadioButton_problemHard.setText("Hard Problem [5,6,7,4,0,8,3,2,1]");
        jRadioButton_problemHard.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton_problemHardActionPerformed(evt);
            }
        });

        buttonGroup_puzzle.add(jRadioButton_problemCustom);
        jRadioButton_problemCustom.setText("Custom");
        jRadioButton_problemCustom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton_problemCustomActionPerformed(evt);
            }
        });

        jTextField_customPuzzle.setText("012345678");
        jTextField_customPuzzle.setEnabled(false);
        jTextField_customPuzzle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_customPuzzleActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jRadioButton_easyProblem)
                    .addComponent(jRadioButton_problemMedium)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                            .addComponent(jRadioButton_problemCustom)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jTextField_customPuzzle))
                        .addComponent(jRadioButton_problemHard, javax.swing.GroupLayout.Alignment.LEADING)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jRadioButton_easyProblem)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jRadioButton_problemMedium)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jRadioButton_problemHard)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 2, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRadioButton_problemCustom)
                    .addComponent(jTextField_customPuzzle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jRadioButton_aStar)
                            .addComponent(jRadioButton_dfs)
                            .addComponent(jRadioButton_iterativeDS)
                            .addComponent(jRadioButton_greedyBFS)
                            .addComponent(jRadioButton_bfs))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(panel_Heuristic, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton_runAlgo, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton_solution, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(62, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jRadioButton_bfs)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jRadioButton_dfs)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jRadioButton_iterativeDS)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jRadioButton_greedyBFS)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jRadioButton_aStar))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(panel_Heuristic, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton_runAlgo, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton_solution, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(31, Short.MAX_VALUE))
        );

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Algo", "Length", "Time", "Space"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Text Output"));

        jTextArea.setColumns(20);
        jTextArea.setRows(5);
        jScrollPane2.setViewportView(jTextArea);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2)
        );

        jPanel_drawing.setBorder(javax.swing.BorderFactory.createTitledBorder("Drawing") );

        jButton1.setText("Clear Text Output");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel_drawingLayout = new javax.swing.GroupLayout(jPanel_drawing);
        jPanel_drawing.setLayout(jPanel_drawingLayout);
        jPanel_drawingLayout.setHorizontalGroup(
            jPanel_drawingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_drawingLayout.createSequentialGroup()
                .addContainerGap(409, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel_drawingLayout.setVerticalGroup(
            jPanel_drawingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_drawingLayout.createSequentialGroup()
                .addContainerGap(296, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jMenu1.setText("File");

        jMenuItem_exit.setText("Exit");
        jMenuItem_exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_exitActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem_exit);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jPanel_drawing, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel_drawing, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem_exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_exitActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_jMenuItem_exitActionPerformed

    private void jRadioButton_aStarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton_aStarActionPerformed
        // TODO add your handling code here:
        setHeuristicEnabled();

        if (!(jRadioButton_HeuristicOne.isSelected() || jRadioButton_HeuristicTwo.isSelected())) {
            JOptionPane.showMessageDialog(rootPane, "Please Select Heuristic Function");

        }
    }//GEN-LAST:event_jRadioButton_aStarActionPerformed

    private void jRadioButton_HeuristicTwoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton_HeuristicTwoActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_jRadioButton_HeuristicTwoActionPerformed

    private void jButton_solutionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_solutionActionPerformed

        jProgressBar1.setIndeterminate(true);
        if (solution.length() > 25) {
            int reply = JOptionPane.showConfirmDialog(null, "Puzzle Involves Large number of steps, Would you like to continue", "Continue", JOptionPane.YES_NO_OPTION);
            if (reply == JOptionPane.YES_OPTION) {
                d.PaintImage();
                d.PlaySolution(problem, solution);
                //System.out.println("Painted");
                jProgressBar1.setIndeterminate(false);
            } else {
                JOptionPane.showMessageDialog(null, "GOODBYE");
                System.exit(0);
            }
        } else {
            d.PaintImage();
            d.PlaySolution(problem, solution);
            System.out.println("Painted");
            jProgressBar1.setIndeterminate(false);
        }


    }//GEN-LAST:event_jButton_solutionActionPerformed

    private void jRadioButton_easyProblemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton_easyProblemActionPerformed
        // TODO add your handling code here:
        problem = problemEasy;
        d.PaintImage();
        jTextField_customPuzzle.setEnabled(false);
        d.PaintPuzzle(problem);
    }//GEN-LAST:event_jRadioButton_easyProblemActionPerformed

    private void jTextField_customPuzzleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_customPuzzleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_customPuzzleActionPerformed

    private void jRadioButton_bfsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton_bfsActionPerformed
        // TODO add your handling code here:
        setHeuristicDisable();


    }//GEN-LAST:event_jRadioButton_bfsActionPerformed

    private void jButton_runAlgoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_runAlgoActionPerformed
        // TODO add your handling code here:
        if (jRadioButton_problemCustom.isSelected()) {
            String dataS = jTextField_customPuzzle.getText();
            dataS.replaceAll("[^0-9]", "");
            int[] data = new int[problemEasy.length];
            try {
                for (int i = 0; i < data.length; i++) {
                    data[i] = Character.getNumericValue(dataS.charAt(i));
                }
                problem = data;
                d.PaintPuzzle(problem);
            } catch (Exception e) {
                System.out.println("Incorrect Data");
            }
        }

        jButton_solution.setEnabled(true);
//        HelperMethods helper = new HelperMethods();
        if (CheckIfAlgoSelected()) {
            if (checkIfProblemPuzzleSelected()) {
                if (jRadioButton_bfs.isSelected()) {
                    try {
                        jTextArea.setText("Breadth First Algorithm");
                        BFS_2 bfs = new BFS_2(helper.DeepCopyArray(problem));
                        bfs.solve();
                        solution = bfs.solutionSteps;
                        time = bfs.time;
                        space=bfs.space;
                        tableodel.insertRow(0, new Object[]{"Breadth First Search", solution.length(), " " + time + " MilliSeconds", space});
                        System.gc();
                    } catch (Exception e) {
                        System.out.println("Error Solving the puzzle");
                    }
                } else if (jRadioButton_dfs.isSelected()) {
                    try {
                        
                        System.gc();
                        jTextArea.setText("Depth First Algorithm");
                        DFS_2 dfs = new DFS_2(helper.DeepCopyArray(problem));
                        dfs.solve();
                        solution = dfs.solutionSteps;
                        time = dfs.time;
                        space=dfs.space;
                        tableodel.insertRow(0, new Object[]{"Depth First Search", solution.length(), " " + time + " MilliSeconds", space});
                        System.gc();
                    } catch (Exception e) {
                        System.out.println("Error Solving the puzzle");
                    }
                } else if (jRadioButton_iterativeDS.isSelected()) {
                    try {
                        jTextArea.setText("Iterative Deepening Search");
                        AlgoOld.IterativeDeepeningSearch IDS = new AlgoOld.IterativeDeepeningSearch(helper.DeepCopyArray(problem));
                        IDS.solve();
                        solution = IDS.solutionSteps;
                        time = IDS.time;
                        space=IDS.space;
                        tableodel.insertRow(0, new Object[]{"Iterative Deepening Search", solution.length(), " " + time + " MilliSeconds", space});
                        System.gc();
                    } catch (Exception e) {
                        System.out.println("Error Solving the puzzle");
                    }

                } else if (jRadioButton_greedyBFS.isSelected() && jRadioButton_HeuristicOne.isSelected()) {

                    try {
                        jTextArea.setText("Greedy BFS with Tiles Out Of Place Heuristic");
                        Greedy_BFS_H_One_NumOfTiles greedy1 = new Greedy_BFS_H_One_NumOfTiles(helper.DeepCopyArray(problem));
                        greedy1.solve();
                        solution = greedy1.solutionSteps;
                        time=greedy1.time;
                        space=greedy1.space;
                        tableodel.insertRow(0, new Object[]{"Greedy BFS with H1", solution.length(), " " + time + " MilliSeconds", space});
                        System.gc();
                    } catch (Exception e) {
                        System.out.println("Error Solving the puzzle");
                    }
                } else if (jRadioButton_greedyBFS.isSelected() && jRadioButton_HeuristicTwo.isSelected()) {
                    try {
                        jTextArea.setText("Greedy BFS with Manhattan Distance Heuristic");
                        Greedy_BFS_H_Two_Manhatten greedy2 = new Greedy_BFS_H_Two_Manhatten(helper.DeepCopyArray(problem));
                        greedy2.solve();
                        solution = greedy2.solutionSteps;
                        time = greedy2.time;
                        space=greedy2.space;
                        tableodel.insertRow(0, new Object[]{"Greedy BFS H2 Heuristic", solution.length(), " " + time + " MilliSeconds", space});
                        System.gc();
                    } catch (Exception e) {
                        System.out.println("Error Solving the puzzle");
                    }
                } else if (jRadioButton_aStar.isSelected() && jRadioButton_HeuristicOne.isSelected()) {
                    try {
                        jTextArea.setText("A* with H1 Heuristic function - Tiles out of place");
                        A_Star_H_One a1 = new A_Star_H_One(helper.DeepCopyArray(problem));
                        a1.solve();
                        solution = a1.solutionSteps;
                        time = a1.time;
                        space=a1.space;
                        tableodel.insertRow(0, new Object[]{"A* with H1 ", solution.length(), " " + time + " MilliSeconds", space});
                        System.gc();
                    } catch (Exception e) {
                        System.out.println("Error Solving the puzzle");
                    }
                } else if (jRadioButton_aStar.isSelected() && jRadioButton_HeuristicTwo.isSelected()) {
                    try {
                        jTextArea.setText("A* with H2 Heuristic function - Manhatten Distance");
                        A_Star_H_Two ah2 = new A_Star_H_Two(helper.DeepCopyArray(problem));
                        ah2.solve();
                        solution = ah2.solutionSteps;
                        time = ah2.time;
                        space=ah2.space;
                        tableodel.insertRow(0, new Object[]{"A* with Heuristic Two", solution.length(), " " + time + " MilliSeconds", space});
                        System.gc();
                    } catch (Exception e) {
                        System.out.println("Error Solving the puzzle");
                    }
                }

            }
        }
    }//GEN-LAST:event_jButton_runAlgoActionPerformed

    private void jRadioButton_dfsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton_dfsActionPerformed
        setHeuristicDisable();
        // TODO add your handling code here:
        setHeuristicDisable();


    }//GEN-LAST:event_jRadioButton_dfsActionPerformed

    private void jRadioButton_iterativeDSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton_iterativeDSActionPerformed
        setHeuristicDisable();

    }//GEN-LAST:event_jRadioButton_iterativeDSActionPerformed

    private void jRadioButton_greedyBFSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton_greedyBFSActionPerformed
        setHeuristicEnabled();

        if (!(jRadioButton_HeuristicOne.isSelected() || jRadioButton_HeuristicTwo.isSelected())) {
            JOptionPane.showMessageDialog(rootPane, "Please Select Heuristic Function");

        }
    }//GEN-LAST:event_jRadioButton_greedyBFSActionPerformed

    private void jRadioButton_HeuristicOneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton_HeuristicOneActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_jRadioButton_HeuristicOneActionPerformed

    private void jRadioButton_problemMediumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton_problemMediumActionPerformed
        problem = problemMedium;
        d.PaintImage();
        jTextField_customPuzzle.setEnabled(false);
        d.PaintPuzzle(problem);
// TODO add your handling code here:
    }//GEN-LAST:event_jRadioButton_problemMediumActionPerformed

    private void jRadioButton_problemHardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton_problemHardActionPerformed
        problem = problemHard;d.PaintImage();
        d.PaintPuzzle(problem);
        jTextField_customPuzzle.setEnabled(false);
    }//GEN-LAST:event_jRadioButton_problemHardActionPerformed

    private void jRadioButton_problemCustomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton_problemCustomActionPerformed
        // TODO add your handling code here:
        if (jRadioButton_problemCustom.isSelected()) {
            jTextField_customPuzzle.setEditable(true);
            jTextField_customPuzzle.setEnabled(true);

        }
    }//GEN-LAST:event_jRadioButton_problemCustomActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        jTextArea.setText("");
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                LookAndFeel nimbus = new NimbusLookAndFeel();
                LookAndFeel windowsLAF = new WindowsLookAndFeel();
                LookAndFeel metalLAF = new MetalLookAndFeel();//good
                LookAndFeel laf = new MotifLookAndFeel();
                javax.swing.UIManager.setLookAndFeel(metalLAF);
//                System.out.println("Themes : "+info);
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                
//                    System.out.println("Nimbus Set");
//                    break;
//                }
            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(EightPuzzleFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(EightPuzzleFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(EightPuzzleFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EightPuzzleFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                EightPuzzleFrame frame = new EightPuzzleFrame();
                frame.createWindow();
                frame.setHeuristicDisable(); 
                JTextAreaOutputStream out = new JTextAreaOutputStream(jTextArea);
                System.setOut(new PrintStream(out));
                System.out.println("***");
                frame.setVisible(true);
            }
        });
    }

    private void createWindow() {
        d = new drawing();
        d.setG(jPanel_drawing.getGraphics());

    }

    /**
     * Method to check if the puzzle problem type is selected
     *
     * @return
     */
    private boolean checkIfProblemPuzzleSelected() {
        boolean selectedOne = false;
        if (jRadioButton_easyProblem.isSelected()) {
            selectedOne = true;
        } else if (jRadioButton_problemMedium.isSelected()) {
            selectedOne = true;
        } else if (jRadioButton_problemHard.isSelected()) {
            selectedOne = true;
        } else if (jRadioButton_problemCustom.isSelected()) {
            selectedOne = true;
        } else {
            JOptionPane.showMessageDialog(rootPane, "Please Select Puzzle Problem");
        }
        return selectedOne;
    }

    private boolean CheckIfAlgoSelected() {
        boolean selected = false;
        {
            if (jRadioButton_bfs.isSelected()) {
                selected = true;
            } else if (jRadioButton_dfs.isSelected()) {
                selected = true;
            } else if (jRadioButton_iterativeDS.isSelected()) {
                selected = true;
            } else if (jRadioButton_greedyBFS.isSelected()) {
                selected = true;
            } else if (jRadioButton_aStar.isSelected()) {
                selected = true;
            }
            return selected;
        }
    }

    /**
     * function to enable the selection of Heuristic function
     */
    public void setHeuristicEnabled() {
        jRadioButton_HeuristicOne.setEnabled(true);
        jRadioButton_HeuristicTwo.setEnabled(true);
    }

    /**
     * function to disable the selection of Heuristic function
     */
    public void setHeuristicDisable() {
        jRadioButton_HeuristicOne.setEnabled(false);
        jRadioButton_HeuristicTwo.setEnabled(false);
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup_algorithms;
    private javax.swing.ButtonGroup buttonGroup_heuristic;
    private javax.swing.ButtonGroup buttonGroup_puzzle;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton_runAlgo;
    private javax.swing.JButton jButton_solution;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem_exit;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    public javax.swing.JPanel jPanel_drawing;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JRadioButton jRadioButton_HeuristicOne;
    private javax.swing.JRadioButton jRadioButton_HeuristicTwo;
    private javax.swing.JRadioButton jRadioButton_aStar;
    private javax.swing.JRadioButton jRadioButton_bfs;
    private javax.swing.JRadioButton jRadioButton_dfs;
    private javax.swing.JRadioButton jRadioButton_easyProblem;
    private javax.swing.JRadioButton jRadioButton_greedyBFS;
    private javax.swing.JRadioButton jRadioButton_iterativeDS;
    private javax.swing.JRadioButton jRadioButton_problemCustom;
    private javax.swing.JRadioButton jRadioButton_problemHard;
    private javax.swing.JRadioButton jRadioButton_problemMedium;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    public static javax.swing.JTextArea jTextArea;
    private javax.swing.JTextField jTextField_customPuzzle;
    private javax.swing.JPanel panel_Heuristic;
    // End of variables declaration//GEN-END:variables
}
